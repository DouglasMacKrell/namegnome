name: Nightly Cross-Platform Matrix

on:
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  nightly-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]
        include:
          # Include additional combinations for broader testing
          - os: ubuntu-latest
            python-version: 3.12
            extra-flags: --no-rich
          - os: macos-latest  
            python-version: 3.12
            extra-flags: --no-rich
          - os: windows-latest
            python-version: 3.12
            extra-flags: --no-rich

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set shell to bash on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo "SHELL=bash" >> $GITHUB_ENV
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install ruff mypy pytest-cov pre-commit pytest-mock types-PyYAML tomli tomli-w typer rich pydantic httpx jinja2 respx click pyyaml pytest-asyncio
        
    - name: Debug Windows environment
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        echo "OSTYPE: $OSTYPE"
        echo "Python version: $(python --version)"
        echo "Python executable: $(which python)"
        python -c "import os; print(f'Path separator: {os.path.sep}')"
        bash ./scripts/debug_windows_tests.sh || true
        
    - name: Run full test suite including integration
      shell: bash
      run: |
        # Run all tests including integration tests
        python -m pytest tests/ -v --cov=namegnome --cov-report=term-missing --cov-report=xml
      env:
        CI: "true"
        PYTHONPATH: ${{ github.workspace }}
        NAMEGNOME_NO_RICH: ${{ matrix.extra-flags == '--no-rich' && 'true' || 'false' }}
        
    - name: Run integration tests specifically
      shell: bash
      run: |
        # Run integration tests with performance monitoring
        python -m pytest tests/integration/ -v --tb=short
      env:
        CI: "true"
        PYTHONPATH: ${{ github.workspace }}
        NAMEGNOME_NO_RICH: ${{ matrix.extra-flags == '--no-rich' && 'true' || 'false' }}
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        files: ./coverage.xml
        flags: nightly
        name: codecov-nightly
        
    - name: Create test summary
      if: always()
      run: |
        echo "## Nightly Test Summary (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
        echo "- Python Version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- Extra Flags: ${{ matrix.extra-flags }}" >> $GITHUB_STEP_SUMMARY
        echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY 